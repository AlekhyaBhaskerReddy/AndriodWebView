<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="8" total="36" passed="28" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-14T16:13:45 IST" name="Android_Silvassa_OfficerApp" finished-at="2024-08-14T16:17:25 IST" duration-ms="220047">
    <groups>
      <group name="TC_DashboardAlerts_005">
        <method signature="TC_DashboardAlerts_005.click_DeviceStatus()[pri:29, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" name="click_DeviceStatus" class="com.silvassaOfficer.testcases.TC_DashboardAlerts_005"/>
        <method signature="TC_DashboardAlerts_005.get_DeviceStatusData()[pri:30, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" name="get_DeviceStatusData" class="com.silvassaOfficer.testcases.TC_DashboardAlerts_005"/>
        <method signature="TC_DashboardAlerts_005.deviceStatus_Scroll()[pri:31, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" name="deviceStatus_Scroll" class="com.silvassaOfficer.testcases.TC_DashboardAlerts_005"/>
      </group> <!-- TC_DashboardAlerts_005 -->
      <group name="TC_Dashboard_Revenue_001">
        <method signature="TC_Dashboard_Revenue_001.click1D_Button()[pri:5, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="click1D_Button" class="com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001"/>
        <method signature="TC_Dashboard_Revenue_001.get1D_Revenue()[pri:6, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="get1D_Revenue" class="com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001"/>
        <method signature="TC_Dashboard_Revenue_001.click1W_Button()[pri:7, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="click1W_Button" class="com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001"/>
        <method signature="TC_Dashboard_Revenue_001.click1M_Button()[pri:8, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="click1M_Button" class="com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001"/>
        <method signature="TC_Dashboard_Revenue_001.getSummaryDashoard_Cards()[pri:9, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="getSummaryDashoard_Cards" class="com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001"/>
        <method signature="TC_Dashboard_Revenue_001.click_ShowEntries()[pri:10, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="click_ShowEntries" class="com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001"/>
        <method signature="TC_Dashboard_Revenue_001.scroll_Thepage()[pri:11, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="scroll_Thepage" class="com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001"/>
        <method signature="TC_Dashboard_Revenue_001.clickStart_EndDate()[pri:12, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="clickStart_EndDate" class="com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001"/>
        <method signature="TC_Dashboard_Revenue_001.click_BackWard_ToSelect_StartDate()[pri:13, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="click_BackWard_ToSelect_StartDate" class="com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001"/>
        <method signature="TC_Dashboard_Revenue_001.clickStart_Date()[pri:14, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="clickStart_Date" class="com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001"/>
        <method signature="TC_Dashboard_Revenue_001.click_ForWard_ToSelect_EndDate()[pri:15, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="click_ForWard_ToSelect_EndDate" class="com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001"/>
        <method signature="TC_Dashboard_Revenue_001.select_EndDate_ApplyBtn()[pri:16, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="select_EndDate_ApplyBtn" class="com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001"/>
        <method signature="TC_Dashboard_Revenue_001.click_ApplyBtn()[pri:17, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="click_ApplyBtn" class="com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001"/>
      </group> <!-- TC_Dashboard_Revenue_001 -->
      <group name="TC_Dashboard_Occupancy_002">
        <method signature="TC_Dashboard_Occupancy_002.clickon_AvgOccupancy()[pri:16, instance:com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002@54422e18]" name="clickon_AvgOccupancy" class="com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002"/>
        <method signature="TC_Dashboard_Occupancy_002.get_AvgOccupancyData()[pri:17, instance:com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002@54422e18]" name="get_AvgOccupancyData" class="com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002"/>
      </group> <!-- TC_Dashboard_Occupancy_002 -->
      <group name="TC_DashboardDevices_004">
        <method signature="TC_DashboardDevices_004.click_DeviceStatus()[pri:26, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" name="click_DeviceStatus" class="com.silvassaOfficer.testcases.TC_DashboardDevices_004"/>
        <method signature="TC_DashboardDevices_004.get_DeviceStatusData()[pri:27, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" name="get_DeviceStatusData" class="com.silvassaOfficer.testcases.TC_DashboardDevices_004"/>
        <method signature="TC_DashboardDevices_004.deviceStatus_Scroll()[pri:28, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" name="deviceStatus_Scroll" class="com.silvassaOfficer.testcases.TC_DashboardDevices_004"/>
      </group> <!-- TC_DashboardDevices_004 -->
      <group name="TC_LoginTest_001">
        <method signature="TC_LoginTest_001.verify_Title()[pri:3, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="verify_Title" class="com.silvassaOfficer.testcases.TC_LoginTest_001"/>
        <method signature="TC_LoginTest_001.login()[pri:4, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" name="login" class="com.silvassaOfficer.testcases.TC_LoginTest_001"/>
      </group> <!-- TC_LoginTest_001 -->
      <group name="TC_DashboardSites_003">
        <method signature="TC_DashboardSites_003.clickon_ParkingSites()[pri:22, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" name="clickon_ParkingSites" class="com.silvassaOfficer.testcases.TC_DashboardSites_003"/>
        <method signature="TC_DashboardSites_003.get_ParkingSitesData()[pri:23, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" name="get_ParkingSitesData" class="com.silvassaOfficer.testcases.TC_DashboardSites_003"/>
        <method signature="TC_DashboardSites_003.parkingSites_Scroll()[pri:24, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" name="parkingSites_Scroll" class="com.silvassaOfficer.testcases.TC_DashboardSites_003"/>
        <method signature="TC_DashboardSites_003.print_AllSiteNames()[pri:25, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" name="print_AllSiteNames" class="com.silvassaOfficer.testcases.TC_DashboardSites_003"/>
        <method signature="TC_DashboardSites_003.parkingSites_ScrollUp()[pri:26, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" name="parkingSites_ScrollUp" class="com.silvassaOfficer.testcases.TC_DashboardSites_003"/>
      </group> <!-- TC_DashboardSites_003 -->
    </groups>
    <test started-at="2024-08-14T16:13:45 IST" name="Dashboard Test" finished-at="2024-08-14T16:17:25 IST" duration-ms="220047">
      <class name="com.silvassaOfficer.testcases.TC_DashboardDevices_004">
        <test-method is-config="true" signature="setup1()[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" started-at="2024-08-14T16:16:29 IST" name="setup1" finished-at="2024-08-14T16:16:33 IST" duration-ms="3983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup1 -->
        <test-method signature="click_DeviceStatus()[pri:26, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" started-at="2024-08-14T16:16:33 IST" name="click_DeviceStatus" finished-at="2024-08-14T16:16:40 IST" duration-ms="6995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- click_DeviceStatus -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" started-at="2024-08-14T16:16:33 IST" name="setUp" finished-at="2024-08-14T16:16:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" started-at="2024-08-14T16:16:33 IST" name="startTest" finished-at="2024-08-14T16:16:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_DashboardDevices_004.click_DeviceStatus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" started-at="2024-08-14T16:16:40 IST" name="getResult" finished-at="2024-08-14T16:16:40 IST" duration-ms="28" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=click_DeviceStatus status=SUCCESS method=TC_DashboardDevices_004.click_DeviceStatus()[pri:26, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="get_DeviceStatusData()[pri:27, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" started-at="2024-08-14T16:16:40 IST" name="get_DeviceStatusData" finished-at="2024-08-14T16:16:43 IST" duration-ms="3358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_DeviceStatusData -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" started-at="2024-08-14T16:16:40 IST" name="startTest" finished-at="2024-08-14T16:16:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_DashboardDevices_004.get_DeviceStatusData()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" started-at="2024-08-14T16:16:43 IST" name="getResult" finished-at="2024-08-14T16:16:43 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=get_DeviceStatusData status=SUCCESS method=TC_DashboardDevices_004.get_DeviceStatusData()[pri:27, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deviceStatus_Scroll()[pri:28, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" started-at="2024-08-14T16:16:43 IST" name="deviceStatus_Scroll" finished-at="2024-08-14T16:16:55 IST" duration-ms="12039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deviceStatus_Scroll -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" started-at="2024-08-14T16:16:43 IST" name="startTest" finished-at="2024-08-14T16:16:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_DashboardDevices_004.deviceStatus_Scroll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" started-at="2024-08-14T16:16:55 IST" name="getResult" finished-at="2024-08-14T16:16:55 IST" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deviceStatus_Scroll status=SUCCESS method=TC_DashboardDevices_004.deviceStatus_Scroll()[pri:28, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="continueProcess_DashboardDevices()[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardDevices_004@7ef82753]" started-at="2024-08-14T16:16:55 IST" name="continueProcess_DashboardDevices" finished-at="2024-08-14T16:16:58 IST" duration-ms="3001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- continueProcess_DashboardDevices -->
      </class> <!-- com.silvassaOfficer.testcases.TC_DashboardDevices_004 -->
      <class name="com.silvassaOfficer.testcases.TC_DashboardAlerts_005">
        <test-method is-config="true" signature="setup1()[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" started-at="2024-08-14T16:16:58 IST" name="setup1" finished-at="2024-08-14T16:17:02 IST" duration-ms="4031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup1 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" started-at="2024-08-14T16:17:02 IST" name="setUp" finished-at="2024-08-14T16:17:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="click_DeviceStatus()[pri:29, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" started-at="2024-08-14T16:17:02 IST" name="click_DeviceStatus" finished-at="2024-08-14T16:17:08 IST" duration-ms="5994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- click_DeviceStatus -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" started-at="2024-08-14T16:17:02 IST" name="startTest" finished-at="2024-08-14T16:17:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_DashboardAlerts_005.click_DeviceStatus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" started-at="2024-08-14T16:17:08 IST" name="getResult" finished-at="2024-08-14T16:17:08 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=click_DeviceStatus status=SUCCESS method=TC_DashboardAlerts_005.click_DeviceStatus()[pri:29, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="get_DeviceStatusData()[pri:30, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" started-at="2024-08-14T16:17:08 IST" name="get_DeviceStatusData" finished-at="2024-08-14T16:17:12 IST" duration-ms="3323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_DeviceStatusData -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" started-at="2024-08-14T16:17:08 IST" name="startTest" finished-at="2024-08-14T16:17:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_DashboardAlerts_005.get_DeviceStatusData()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" started-at="2024-08-14T16:17:12 IST" name="getResult" finished-at="2024-08-14T16:17:12 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=get_DeviceStatusData status=SUCCESS method=TC_DashboardAlerts_005.get_DeviceStatusData()[pri:30, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deviceStatus_Scroll()[pri:31, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" started-at="2024-08-14T16:17:12 IST" name="deviceStatus_Scroll" finished-at="2024-08-14T16:17:22 IST" duration-ms="10368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deviceStatus_Scroll -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" started-at="2024-08-14T16:17:12 IST" name="startTest" finished-at="2024-08-14T16:17:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_DashboardAlerts_005.deviceStatus_Scroll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" started-at="2024-08-14T16:17:22 IST" name="getResult" finished-at="2024-08-14T16:17:22 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deviceStatus_Scroll status=SUCCESS method=TC_DashboardAlerts_005.deviceStatus_Scroll()[pri:31, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown_FromDashboardAlerts()[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardAlerts_005@3b0fe47a]" started-at="2024-08-14T16:17:22 IST" name="tearDown_FromDashboardAlerts" finished-at="2024-08-14T16:17:25 IST" duration-ms="3000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown_FromDashboardAlerts -->
      </class> <!-- com.silvassaOfficer.testcases.TC_DashboardAlerts_005 -->
      <class name="com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002">
        <test-method is-config="true" signature="setup1()[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002@54422e18]" started-at="2024-08-14T16:15:37 IST" name="setup1" finished-at="2024-08-14T16:15:41 IST" duration-ms="3948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup1 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002@54422e18]" started-at="2024-08-14T16:15:41 IST" name="setUp" finished-at="2024-08-14T16:15:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002@54422e18]" started-at="2024-08-14T16:15:41 IST" name="startTest" finished-at="2024-08-14T16:15:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002.clickon_AvgOccupancy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickon_AvgOccupancy()[pri:16, instance:com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002@54422e18]" started-at="2024-08-14T16:15:41 IST" name="clickon_AvgOccupancy" finished-at="2024-08-14T16:15:45 IST" duration-ms="4086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickon_AvgOccupancy -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002@54422e18]" started-at="2024-08-14T16:15:45 IST" name="getResult" finished-at="2024-08-14T16:15:45 IST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickon_AvgOccupancy status=SUCCESS method=TC_Dashboard_Occupancy_002.clickon_AvgOccupancy()[pri:16, instance:com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002@54422e18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="get_AvgOccupancyData()[pri:17, instance:com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002@54422e18]" started-at="2024-08-14T16:15:45 IST" name="get_AvgOccupancyData" finished-at="2024-08-14T16:15:53 IST" duration-ms="7352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_AvgOccupancyData -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002@54422e18]" started-at="2024-08-14T16:15:45 IST" name="startTest" finished-at="2024-08-14T16:15:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002.get_AvgOccupancyData()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002@54422e18]" started-at="2024-08-14T16:15:53 IST" name="getResult" finished-at="2024-08-14T16:15:53 IST" duration-ms="34" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=get_AvgOccupancyData status=SUCCESS method=TC_Dashboard_Occupancy_002.get_AvgOccupancyData()[pri:17, instance:com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002@54422e18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="continueProcess_DashboardOccupancy()[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002@54422e18]" started-at="2024-08-14T16:15:53 IST" name="continueProcess_DashboardOccupancy" finished-at="2024-08-14T16:15:56 IST" duration-ms="3000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- continueProcess_DashboardOccupancy -->
      </class> <!-- com.silvassaOfficer.testcases.TC_Dashboard_Occupancy_002 -->
      <class name="com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:13:45 IST" name="setup" finished-at="2024-08-14T16:13:45 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup1()[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:13:45 IST" name="setup1" finished-at="2024-08-14T16:13:50 IST" duration-ms="4688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup1 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:13:50 IST" name="setUp" finished-at="2024-08-14T16:13:50 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:13:50 IST" name="startTest" finished-at="2024-08-14T16:13:50 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_LoginTest_001.verify_Title()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verify_Title()[pri:3, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:13:50 IST" name="verify_Title" finished-at="2024-08-14T16:13:53 IST" duration-ms="3855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_Title -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:13:53 IST" name="getResult" finished-at="2024-08-14T16:13:54 IST" duration-ms="219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_Title status=SUCCESS method=TC_LoginTest_001.verify_Title()[pri:3, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:13:54 IST" name="startTest" finished-at="2024-08-14T16:13:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_LoginTest_001.login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="login()[pri:4, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:13:54 IST" name="login" description="Test to validate user login functionality" finished-at="2024-08-14T16:13:57 IST" duration-ms="3629" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:13:57 IST" name="getResult" finished-at="2024-08-14T16:13:57 IST" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=TC_LoginTest_001.login()[pri:4, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:13:57 IST" name="startTest" finished-at="2024-08-14T16:13:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001.click1D_Button()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="click1D_Button()[pri:5, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:13:57 IST" name="click1D_Button" finished-at="2024-08-14T16:14:04 IST" duration-ms="6768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- click1D_Button -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:04 IST" name="getResult" finished-at="2024-08-14T16:14:04 IST" duration-ms="28" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=click1D_Button status=SUCCESS method=TC_Dashboard_Revenue_001.click1D_Button()[pri:5, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:04 IST" name="startTest" finished-at="2024-08-14T16:14:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001.get1D_Revenue()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="get1D_Revenue()[pri:6, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:04 IST" name="get1D_Revenue" finished-at="2024-08-14T16:14:04 IST" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get1D_Revenue -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:04 IST" name="getResult" finished-at="2024-08-14T16:14:04 IST" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=get1D_Revenue status=SUCCESS method=TC_Dashboard_Revenue_001.get1D_Revenue()[pri:6, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="click1W_Button()[pri:7, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:04 IST" name="click1W_Button" finished-at="2024-08-14T16:14:11 IST" duration-ms="6486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- click1W_Button -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:04 IST" name="startTest" finished-at="2024-08-14T16:14:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001.click1W_Button()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:11 IST" name="getResult" finished-at="2024-08-14T16:14:11 IST" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=click1W_Button status=SUCCESS method=TC_Dashboard_Revenue_001.click1W_Button()[pri:7, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="click1M_Button()[pri:8, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:11 IST" name="click1M_Button" finished-at="2024-08-14T16:14:17 IST" duration-ms="6283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- click1M_Button -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:11 IST" name="startTest" finished-at="2024-08-14T16:14:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001.click1M_Button()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:17 IST" name="getResult" finished-at="2024-08-14T16:14:17 IST" duration-ms="31" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=click1M_Button status=SUCCESS method=TC_Dashboard_Revenue_001.click1M_Button()[pri:8, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:17 IST" name="startTest" finished-at="2024-08-14T16:14:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001.getSummaryDashoard_Cards()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="getSummaryDashoard_Cards()[pri:9, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:17 IST" name="getSummaryDashoard_Cards" finished-at="2024-08-14T16:14:21 IST" duration-ms="3321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSummaryDashoard_Cards -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:21 IST" name="getResult" finished-at="2024-08-14T16:14:21 IST" duration-ms="21" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSummaryDashoard_Cards status=SUCCESS method=TC_Dashboard_Revenue_001.getSummaryDashoard_Cards()[pri:9, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="click_ShowEntries()[pri:10, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:21 IST" name="click_ShowEntries" finished-at="2024-08-14T16:14:26 IST" duration-ms="5184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- click_ShowEntries -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:21 IST" name="startTest" finished-at="2024-08-14T16:14:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001.click_ShowEntries()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:26 IST" name="getResult" finished-at="2024-08-14T16:14:26 IST" duration-ms="37" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=click_ShowEntries status=SUCCESS method=TC_Dashboard_Revenue_001.click_ShowEntries()[pri:10, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="scroll_Thepage()[pri:11, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:26 IST" name="scroll_Thepage" finished-at="2024-08-14T16:14:38 IST" duration-ms="12524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scroll_Thepage -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:26 IST" name="startTest" finished-at="2024-08-14T16:14:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001.scroll_Thepage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:38 IST" name="getResult" finished-at="2024-08-14T16:14:38 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=scroll_Thepage status=SUCCESS method=TC_Dashboard_Revenue_001.scroll_Thepage()[pri:11, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickStart_EndDate()[pri:12, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:38 IST" name="clickStart_EndDate" finished-at="2024-08-14T16:14:41 IST" duration-ms="2634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickStart_EndDate -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:38 IST" name="startTest" finished-at="2024-08-14T16:14:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001.clickStart_EndDate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:41 IST" name="getResult" finished-at="2024-08-14T16:14:41 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickStart_EndDate status=SUCCESS method=TC_Dashboard_Revenue_001.clickStart_EndDate()[pri:12, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="click_BackWard_ToSelect_StartDate()[pri:13, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:41 IST" name="click_BackWard_ToSelect_StartDate" finished-at="2024-08-14T16:14:43 IST" duration-ms="2488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- click_BackWard_ToSelect_StartDate -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:41 IST" name="startTest" finished-at="2024-08-14T16:14:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001.click_BackWard_ToSelect_StartDate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:43 IST" name="getResult" finished-at="2024-08-14T16:14:44 IST" duration-ms="47" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=click_BackWard_ToSelect_StartDate status=SUCCESS method=TC_Dashboard_Revenue_001.click_BackWard_ToSelect_StartDate()[pri:13, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickStart_Date()[pri:14, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:44 IST" name="clickStart_Date" finished-at="2024-08-14T16:14:55 IST" duration-ms="11110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickStart_Date -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:44 IST" name="startTest" finished-at="2024-08-14T16:14:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001.clickStart_Date()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:55 IST" name="getResult" finished-at="2024-08-14T16:14:55 IST" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickStart_Date status=SUCCESS method=TC_Dashboard_Revenue_001.clickStart_Date()[pri:14, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="click_ForWard_ToSelect_EndDate()[pri:15, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:55 IST" name="click_ForWard_ToSelect_EndDate" finished-at="2024-08-14T16:15:06 IST" duration-ms="11139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- click_ForWard_ToSelect_EndDate -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:14:55 IST" name="startTest" finished-at="2024-08-14T16:14:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001.click_ForWard_ToSelect_EndDate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:15:06 IST" name="getResult" finished-at="2024-08-14T16:15:06 IST" duration-ms="22" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=click_ForWard_ToSelect_EndDate status=SUCCESS method=TC_Dashboard_Revenue_001.click_ForWard_ToSelect_EndDate()[pri:15, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="select_EndDate_ApplyBtn()[pri:16, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:15:06 IST" name="select_EndDate_ApplyBtn" finished-at="2024-08-14T16:15:16 IST" duration-ms="10123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- select_EndDate_ApplyBtn -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:15:06 IST" name="startTest" finished-at="2024-08-14T16:15:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001.select_EndDate_ApplyBtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:15:16 IST" name="getResult" finished-at="2024-08-14T16:15:16 IST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=select_EndDate_ApplyBtn status=SUCCESS method=TC_Dashboard_Revenue_001.select_EndDate_ApplyBtn()[pri:16, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:15:16 IST" name="startTest" finished-at="2024-08-14T16:15:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001.click_ApplyBtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="click_ApplyBtn()[pri:17, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:15:16 IST" name="click_ApplyBtn" finished-at="2024-08-14T16:15:31 IST" duration-ms="15125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- click_ApplyBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:15:31 IST" name="getResult" finished-at="2024-08-14T16:15:31 IST" duration-ms="36" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=click_ApplyBtn status=SUCCESS method=TC_Dashboard_Revenue_001.click_ApplyBtn()[pri:17, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="continueProcess_DashboardRevenue()[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:15:31 IST" name="continueProcess_DashboardRevenue" finished-at="2024-08-14T16:15:34 IST" duration-ms="3000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- continueProcess_DashboardRevenue -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:15:34 IST" name="tearDown" finished-at="2024-08-14T16:15:37 IST" duration-ms="3001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDownSuite()[pri:0, instance:com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001@76b1e9b8]" started-at="2024-08-14T16:17:25 IST" name="tearDownSuite" finished-at="2024-08-14T16:17:30 IST" duration-ms="5137" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failed to Logout from the application:An unknown server-side error occurred while processing the command. Original error: 'POST /element' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details
Build info: version: '4.9.1', revision: 'eb2032df7f'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.5.0-28-generic', java.version: '18.0.2-ea'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [b80eb43e-a6ca-4bc9-8e50-e1523a258053, findElement {using=xpath, value=//hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.RelativeLayout/android.webkit.WebView/android.webkit.WebView/android.view.View/android.view.View[1]/android.widget.ListView/android.view.View[2]/android.widget.Button}]
Capabilities {appium:appActivity: com.iramtech.silvassa_offic..., appium:appPackage: com.iramtech.silvassa_officer, appium:automationName: UiAutomator2, appium:databaseEnabled: false, appium:desired: {appActivity: com.iramtech.silvassa_offic..., appPackage: com.iramtech.silvassa_officer, automationName: UiAutomator2, deviceName: moto e13 , noReset: true, platformName: ANDROID, platformVersion: 13.0, testOnly: false}, appium:deviceApiLevel: 33, appium:deviceManufacturer: motorola, appium:deviceModel: moto e13, appium:deviceName: ZD22293992, appium:deviceScreenDensity: 280, appium:deviceScreenSize: 720x1600, appium:deviceUDID: ZD22293992, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:noReset: true, appium:pixelRatio: 1.75, appium:platformVersion: 13, appium:statBarHeight: 42, appium:takesScreenshot: true, appium:testOnly: false, appium:viewportRect: {height: 1558, left: 0, top: 42, width: 720}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: b80eb43e-a6ca-4bc9-8e50-e1523a258053 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failed to Logout from the application:An unknown server-side error occurred while processing the command. Original error: 'POST /element' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details
Build info: version: '4.9.1', revision: 'eb2032df7f'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.5.0-28-generic', java.version: '18.0.2-ea'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [b80eb43e-a6ca-4bc9-8e50-e1523a258053, findElement {using=xpath, value=//hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.RelativeLayout/android.webkit.WebView/android.webkit.WebView/android.view.View/android.view.View[1]/android.widget.ListView/android.view.View[2]/android.widget.Button}]
Capabilities {appium:appActivity: com.iramtech.silvassa_offic..., appium:appPackage: com.iramtech.silvassa_officer, appium:automationName: UiAutomator2, appium:databaseEnabled: false, appium:desired: {appActivity: com.iramtech.silvassa_offic..., appPackage: com.iramtech.silvassa_officer, automationName: UiAutomator2, deviceName: moto e13 , noReset: true, platformName: ANDROID, platformVersion: 13.0, testOnly: false}, appium:deviceApiLevel: 33, appium:deviceManufacturer: motorola, appium:deviceModel: moto e13, appium:deviceName: ZD22293992, appium:deviceScreenDensity: 280, appium:deviceScreenSize: 720x1600, appium:deviceUDID: ZD22293992, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:noReset: true, appium:pixelRatio: 1.75, appium:platformVersion: 13, appium:statBarHeight: 42, appium:takesScreenshot: true, appium:testOnly: false, appium:viewportRect: {height: 1558, left: 0, top: 42, width: 720}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: b80eb43e-a6ca-4bc9-8e50-e1523a258053 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at com.silvassaOfficer.testcases.Basetest.tearDownSuite(BaseTest.java:153)
at com.silvassaOfficer.testcases.TC_LoginTest_001.tearDownSuite(TC_LoginTest_001.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:400)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownSuite -->
      </class> <!-- com.silvassaOfficer.testcases.TC_Dashboard_Revenue_001 -->
      <class name="com.silvassaOfficer.testcases.TC_DashboardSites_003">
        <test-method is-config="true" signature="setup1()[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:15:56 IST" name="setup1" finished-at="2024-08-14T16:16:00 IST" duration-ms="3971" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup1 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:00 IST" name="setUp" finished-at="2024-08-14T16:16:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickon_ParkingSites()[pri:22, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:00 IST" name="clickon_ParkingSites" finished-at="2024-08-14T16:16:04 IST" duration-ms="3959" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickon_ParkingSites -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:00 IST" name="startTest" finished-at="2024-08-14T16:16:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_DashboardSites_003.clickon_ParkingSites()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:04 IST" name="getResult" finished-at="2024-08-14T16:16:04 IST" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickon_ParkingSites status=SUCCESS method=TC_DashboardSites_003.clickon_ParkingSites()[pri:22, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="get_ParkingSitesData()[pri:23, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:04 IST" name="get_ParkingSitesData" finished-at="2024-08-14T16:16:07 IST" duration-ms="3333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_ParkingSitesData -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:04 IST" name="startTest" finished-at="2024-08-14T16:16:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_DashboardSites_003.get_ParkingSitesData()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:07 IST" name="getResult" finished-at="2024-08-14T16:16:07 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=get_ParkingSitesData status=SUCCESS method=TC_DashboardSites_003.get_ParkingSitesData()[pri:23, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="parkingSites_Scroll()[pri:24, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:07 IST" name="parkingSites_Scroll" finished-at="2024-08-14T16:16:14 IST" duration-ms="6816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkingSites_Scroll -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:07 IST" name="startTest" finished-at="2024-08-14T16:16:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_DashboardSites_003.parkingSites_Scroll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:14 IST" name="getResult" finished-at="2024-08-14T16:16:14 IST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=parkingSites_Scroll status=SUCCESS method=TC_DashboardSites_003.parkingSites_Scroll()[pri:24, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="print_AllSiteNames()[pri:25, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:14 IST" name="print_AllSiteNames" finished-at="2024-08-14T16:16:19 IST" duration-ms="5404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- print_AllSiteNames -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:14 IST" name="startTest" finished-at="2024-08-14T16:16:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_DashboardSites_003.print_AllSiteNames()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:19 IST" name="getResult" finished-at="2024-08-14T16:16:19 IST" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=print_AllSiteNames status=SUCCESS method=TC_DashboardSites_003.print_AllSiteNames()[pri:25, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:19 IST" name="startTest" finished-at="2024-08-14T16:16:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.silvassaOfficer.testcases.TC_DashboardSites_003.parkingSites_ScrollUp()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="parkingSites_ScrollUp()[pri:26, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:19 IST" name="parkingSites_ScrollUp" finished-at="2024-08-14T16:16:26 IST" duration-ms="6582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkingSites_ScrollUp -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:26 IST" name="getResult" finished-at="2024-08-14T16:16:26 IST" duration-ms="26" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=parkingSites_ScrollUp status=SUCCESS method=TC_DashboardSites_003.parkingSites_ScrollUp()[pri:26, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="continueProcess_DashboardSites()[pri:0, instance:com.silvassaOfficer.testcases.TC_DashboardSites_003@117159c0]" started-at="2024-08-14T16:16:26 IST" name="continueProcess_DashboardSites" finished-at="2024-08-14T16:16:29 IST" duration-ms="3000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- continueProcess_DashboardSites -->
      </class> <!-- com.silvassaOfficer.testcases.TC_DashboardSites_003 -->
    </test> <!-- Dashboard Test -->
  </suite> <!-- Android_Silvassa_OfficerApp -->
</testng-results>
